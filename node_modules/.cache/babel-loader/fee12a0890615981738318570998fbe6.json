{"ast":null,"code":"const defaultHeaders = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\"\n};\n\nasync function fetchData(_ref) {\n  let {\n    path,\n    method,\n    data,\n    headers\n  } = _ref;\n  const response = await fetch(path, {\n    method: method,\n    body: !!data ? JSON.stringify(data) : null,\n    headers: !!headers ? headers : defaultHeaders\n  }).then(response => response.json());\n  return response;\n}\n\nexport function useFetch() {\n  return {\n    get: (path, headers) => fetchData({\n      path: path,\n      method: \"GET\",\n      data: null,\n      headers: headers\n    }),\n    post: (path, data, headers) => fetchData({\n      path: path,\n      method: \"POST\",\n      data: data,\n      headers: headers\n    }),\n    put: (path, data, headers) => fetchData({\n      path: path,\n      method: \"PUT\",\n      data: data,\n      headers: headers\n    }),\n    del: (path, headers) => fetchData({\n      path: path,\n      method: \"DELETE\",\n      data: null,\n      headers: headers\n    })\n  };\n}\nexport default useFetch;","map":{"version":3,"sources":["/Users/viri/Desktop/final/ExpressJSReact-main/client/src/hooks/useFetch.js"],"names":["defaultHeaders","Accept","fetchData","path","method","data","headers","response","fetch","body","JSON","stringify","then","json","useFetch","get","post","put","del"],"mappings":"AAAA,MAAMA,cAAc,GAAG;AACrB,kBAAgB,kBADK;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;;AAKA,eAAeC,SAAf,OAA0D;AAAA,MAAjC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,GAAiC;AACxD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,IAAD,EAAO;AACjCC,IAAAA,MAAM,EAAEA,MADyB;AAEjCK,IAAAA,IAAI,EAAE,CAAC,CAACJ,IAAF,GAASK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAT,GAAgC,IAFL;AAGjCC,IAAAA,OAAO,EAAE,CAAC,CAACA,OAAF,GAAYA,OAAZ,GAAsBN;AAHE,GAAP,CAAL,CAIpBY,IAJoB,CAIdL,QAAD,IAAcA,QAAQ,CAACM,IAAT,EAJC,CAAvB;AAKA,SAAON,QAAP;AACD;;AAED,OAAO,SAASO,QAAT,GAAoB;AACzB,SAAO;AACLC,IAAAA,GAAG,EAAE,CAACZ,IAAD,EAAOG,OAAP,KACHJ,SAAS,CAAC;AACRC,MAAAA,IAAI,EAAEA,IADE;AAERC,MAAAA,MAAM,EAAE,KAFA;AAGRC,MAAAA,IAAI,EAAE,IAHE;AAIRC,MAAAA,OAAO,EAAEA;AAJD,KAAD,CAFN;AAQLU,IAAAA,IAAI,EAAE,CAACb,IAAD,EAAOE,IAAP,EAAaC,OAAb,KACJJ,SAAS,CAAC;AACRC,MAAAA,IAAI,EAAEA,IADE;AAERC,MAAAA,MAAM,EAAE,MAFA;AAGRC,MAAAA,IAAI,EAAEA,IAHE;AAIRC,MAAAA,OAAO,EAAEA;AAJD,KAAD,CATN;AAeLW,IAAAA,GAAG,EAAE,CAACd,IAAD,EAAOE,IAAP,EAAaC,OAAb,KACHJ,SAAS,CAAC;AACRC,MAAAA,IAAI,EAAEA,IADE;AAERC,MAAAA,MAAM,EAAE,KAFA;AAGRC,MAAAA,IAAI,EAAEA,IAHE;AAIRC,MAAAA,OAAO,EAAEA;AAJD,KAAD,CAhBN;AAsBLY,IAAAA,GAAG,EAAE,CAACf,IAAD,EAAOG,OAAP,KACHJ,SAAS,CAAC;AACRC,MAAAA,IAAI,EAAEA,IADE;AAERC,MAAAA,MAAM,EAAE,QAFA;AAGRC,MAAAA,IAAI,EAAE,IAHE;AAIRC,MAAAA,OAAO,EAAEA;AAJD,KAAD;AAvBN,GAAP;AA8BD;AAED,eAAeQ,QAAf","sourcesContent":["const defaultHeaders = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\",\n};\n\nasync function fetchData({ path, method, data, headers }) {\n  const response = await fetch(path, {\n    method: method,\n    body: !!data ? JSON.stringify(data) : null,\n    headers: !!headers ? headers : defaultHeaders,\n  }).then((response) => response.json());\n  return response;\n}\n\nexport function useFetch() {\n  return {\n    get: (path, headers) =>\n      fetchData({\n        path: path,\n        method: \"GET\",\n        data: null,\n        headers: headers,\n      }),\n    post: (path, data, headers) =>\n      fetchData({\n        path: path,\n        method: \"POST\",\n        data: data,\n        headers: headers,\n      }),\n    put: (path, data, headers) =>\n      fetchData({\n        path: path,\n        method: \"PUT\",\n        data: data,\n        headers: headers,\n      }),\n    del: (path, headers) =>\n      fetchData({\n        path: path,\n        method: \"DELETE\",\n        data: null,\n        headers: headers,\n      }),\n  };\n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}