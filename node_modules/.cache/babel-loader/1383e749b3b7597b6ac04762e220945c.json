{"ast":null,"code":"var _jsxFileName = \"/Users/viri/Desktop/final/ExpressJSReact-main/client/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"; // import App from \"./App\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  if (action === \"increment\") {\n    return state + 1;\n  } else if (action === \"decrement\") {\n    return state - 1;\n  } else if (action === \"reset\") {\n    return 0;\n  } else {\n    throw new Error(`This action type isn't supported.`);\n  }\n}\n\nfunction Counter() {\n  _s();\n\n  const [count, dispatch] = React.useReducer(reducer, 0);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(-1),\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Counter, \"liV/BQV6CNHjKwIp3lC+ZlJzhnY=\");\n\n_c = Counter;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 17\n}, this), document.querySelector(\"#root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/viri/Desktop/final/ExpressJSReact-main/client/src/index.js"],"names":["React","ReactDOM","reducer","state","action","Error","Counter","count","dispatch","useReducer","render","document","querySelector"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,MAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B,WAAOD,KAAK,GAAG,CAAf;AACD,GAFD,MAEO,IAAIC,MAAM,KAAK,WAAf,EAA4B;AACjC,WAAOD,KAAK,GAAG,CAAf;AACD,GAFM,MAEA,IAAIC,MAAM,KAAK,OAAf,EAAwB;AAC7B,WAAO,CAAP;AACD,GAFM,MAEA;AACL,UAAM,IAAIC,KAAJ,CAAW,mCAAX,CAAN;AACD;AACF;;AAED,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,UAAN,CAAiBP,OAAjB,EAA0B,CAA1B,CAA1B;AAEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACA;AAAA,gBAAKK;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,CAAC,CAAF,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD;;GAVQF,O;;KAAAA,O;AAYXL,QAAQ,CAACS,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./App\";\n\nfunction reducer(state, action) {\n    if (action === \"increment\") {\n      return state + 1;\n    } else if (action === \"decrement\") {\n      return state - 1;\n    } else if (action === \"reset\") {\n      return 0;\n    } else {\n      throw new Error(`This action type isn't supported.`);\n    }\n  }\n  \n  function Counter() {\n    const [count, dispatch] = React.useReducer(reducer, 0);\n  \n    return (\n        <React.Fragment>\n        <h1>{count}</h1>\n        <button onClick={() => dispatch(1)}>+</button>\n        <button onClick={() => dispatch(-1)}> - </button>\n      </React.Fragment>\n    );\n  }\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n\n"]},"metadata":{},"sourceType":"module"}