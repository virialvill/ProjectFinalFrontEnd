{"ast":null,"code":"var _jsxFileName = \"/Users/viri/Desktop/final/ExpressJSReact-main/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Recipes from \"./Recipes\";\nimport RecipeDetail from \"./components/museum/museumDetail/RecipeDetail\";\nimport Nav from \"./Nav\";\nimport useFetch from \"./hooks/useFetch\";\nimport useToggle from \"./hooks/useToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [recipes, setRecipes] = React.useState([]);\n  const [loggedin, setLoggedin] = useToggle(false);\n  const [loading, setLoading] = useToggle(true);\n  const [error, setError] = React.useState(\"\");\n  const {\n    get,\n    post\n  } = useFetch(\"/api/recipes\");\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  React.useEffect(() => {\n    setLoading(true);\n    get(\"/api/recipes\").then(data => {\n      setRecipes(data);\n      setLoading(false);\n    }).catch(error => setError(error)).finally(setLoading(false));\n  }, []);\n\n  const addRecipe = recipe => {\n    post(\"/api/recipes\", recipe).then(data => {\n      setRecipes([data, ...recipes]);\n    });\n  };\n\n  if (loading === true) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        loggedin: loggedin,\n        setLoggedin: setLoggedin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Recipes, {\n            recipes: recipes,\n            loggedin: loggedin,\n            addRecipe: addRecipe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:recipeId\",\n          element: /*#__PURE__*/_jsxDEV(RecipeDetail, {\n            recipes: recipes,\n            loggedin: loggedin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"faaqDTMu34/H8514rSo9YoVPDds=\", false, function () {\n  return [useToggle, useToggle, useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/viri/Desktop/final/ExpressJSReact-main/client/src/App.js"],"names":["React","BrowserRouter","Routes","Route","Recipes","RecipeDetail","Nav","useFetch","useToggle","App","recipes","setRecipes","useState","loggedin","setLoggedin","loading","setLoading","error","setError","get","post","useEffect","then","data","catch","finally","addRecipe","recipe"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,SAAS,CAAC,KAAD,CAAzC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,SAAS,CAAC,IAAD,CAAvC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACY,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM;AAAEO,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAgBb,QAAQ,CAAC,cAAD,CAA9B;AAEA;;AACAP,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpBL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,GAAG,CAAC,cAAD,CAAH,CACGG,IADH,CACSC,IAAD,IAAU;AACdZ,MAAAA,UAAU,CAACY,IAAD,CAAV;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJH,EAKGQ,KALH,CAKUP,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAL5B,EAMGQ,OANH,CAMWT,UAAU,CAAC,KAAD,CANrB;AAOD,GATD,EASG,EATH;;AAWA,QAAMU,SAAS,GAAIC,MAAD,IAAY;AAC5BP,IAAAA,IAAI,CAAC,cAAD,EAAiBO,MAAjB,CAAJ,CAA6BL,IAA7B,CAAmCC,IAAD,IAAU;AAC1CZ,MAAAA,UAAU,CAAC,CAACY,IAAD,EAAO,GAAGb,OAAV,CAAD,CAAV;AACD,KAFD;AAGD,GAJD;;AAMA,MAAIK,OAAO,KAAK,IAAhB,EAAsB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIE,KAAJ,EAAW;AACT,wBAAO;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAEJ,QAAf;AAAyB,QAAA,WAAW,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,GADP;AAEE,UAAA,OAAO,eACL,QAAC,OAAD;AACE,YAAA,OAAO,EAAEJ,OADX;AAEE,YAAA,QAAQ,EAAEG,QAFZ;AAGE,YAAA,SAAS,EAAEa;AAHb;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,OAAO,eACP,QAAC,YAAD;AACA,YAAA,OAAO,EAAEhB,OADT;AACkB,YAAA,QAAQ,EAAEG;AAD5B;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA5DQJ,G;UAEyBD,S,EACFA,S,EAERD,Q;;;KALfE,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Recipes from \"./Recipes\";\nimport RecipeDetail from \"./components/museum/museumDetail/RecipeDetail\";\nimport Nav from \"./Nav\";\n\nimport useFetch from \"./hooks/useFetch\";\nimport useToggle from \"./hooks/useToggle\";\n\nfunction App() {\n  const [recipes, setRecipes] = React.useState([]);\n  const [loggedin, setLoggedin] = useToggle(false);\n  const [loading, setLoading] = useToggle(true);\n  const [error, setError] = React.useState(\"\");\n  const { get, post } = useFetch(\"/api/recipes\");\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setLoading(true);\n    get(\"/api/recipes\")\n      .then((data) => {\n        setRecipes(data);\n        setLoading(false);\n      })\n      .catch((error) => setError(error))\n      .finally(setLoading(false));\n  }, []);\n\n  const addRecipe = (recipe) => {\n    post(\"/api/recipes\", recipe).then((data) => {\n      setRecipes([data, ...recipes]);\n    });\n  };\n\n  if (loading === true) {\n    return <p>Loading</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <main>\n      <BrowserRouter>\n        <Nav loggedin={loggedin} setLoggedin={setLoggedin} />\n        <Routes>\n        {/* <RecipeDetail loggedin={loggedin} deleteRecipe={deleteRecipe} /> */}\n          <Route\n            path=\"/\"\n            element={\n              <Recipes\n                recipes={recipes}\n                loggedin={loggedin}\n                addRecipe={addRecipe}\n              />\n            }\n          />\n          <Route\n            path=\"/:recipeId\"\n            element={\n            <RecipeDetail \n            recipes={recipes} loggedin={loggedin}/>}\n          />\n          \n         </Routes>\n      </BrowserRouter>\n    </main>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}