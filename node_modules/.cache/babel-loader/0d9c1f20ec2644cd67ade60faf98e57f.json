{"ast":null,"code":"var _jsxFileName = \"/Users/viri/Desktop/final/ExpressJSReact-main/client/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"; // import App from \"./App\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  if (action.type === \"increment\") {\n    return {\n      count: state.count + state.step,\n      step: state.step\n    };\n  } else if (action.type === \"decrement\") {\n    return {\n      count: state.count - state.step,\n      step: state.step\n    };\n  } else if (action.type === \"reset\") {\n    return {\n      count: 0,\n      step: state.step\n    };\n  } else if (action.type === \"updateStep\") {\n    return {\n      count: state.count,\n      step: action.step\n    };\n  } else {\n    throw new Error();\n  }\n}\n\nfunction Counter() {\n  _s();\n\n  const [count, dispatch] = React.useReducer(reducer, 0);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(-1),\n      children: \" - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Counter, \"liV/BQV6CNHjKwIp3lC+ZlJzhnY=\");\n\n_c = Counter;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 17\n}, this), document.querySelector(\"#root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/viri/Desktop/final/ExpressJSReact-main/client/src/index.js"],"names":["React","ReactDOM","reducer","state","action","type","count","step","Error","Counter","dispatch","useReducer","render","document","querySelector"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACI,IADtB;AAELA,MAAAA,IAAI,EAAEJ,KAAK,CAACI;AAFP,KAAP;AAID,GALD,MAKO,IAAIH,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AACtC,WAAO;AACLC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcH,KAAK,CAACI,IADtB;AAELA,MAAAA,IAAI,EAAEJ,KAAK,CAACI;AAFP,KAAP;AAID,GALM,MAKA,IAAIH,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAClC,WAAO;AACLC,MAAAA,KAAK,EAAE,CADF;AAELC,MAAAA,IAAI,EAAEJ,KAAK,CAACI;AAFP,KAAP;AAID,GALM,MAKA,IAAIH,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AACvC,WAAO;AACLC,MAAAA,KAAK,EAAEH,KAAK,CAACG,KADR;AAELC,MAAAA,IAAI,EAAEH,MAAM,CAACG;AAFR,KAAP;AAID,GALM,MAKA;AACL,UAAM,IAAIC,KAAJ,EAAN;AACD;AACF;;AAGD,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBV,KAAK,CAACW,UAAN,CAAiBT,OAAjB,EAA0B,CAA1B,CAA1B;AAEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACA;AAAA,gBAAKI;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAE,MAAMI,QAAQ,CAAC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,CAAC,CAAF,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD;;GAVQD,O;;KAAAA,O;AAYXR,QAAQ,CAACW,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from \"./App\";\n\nfunction reducer(state, action) {\n    if (action.type === \"increment\") {\n      return {\n        count: state.count + state.step,\n        step: state.step,\n      };\n    } else if (action.type === \"decrement\") {\n      return {\n        count: state.count - state.step,\n        step: state.step,\n      };\n    } else if (action.type === \"reset\") {\n      return {\n        count: 0,\n        step: state.step,\n      };\n    } else if (action.type === \"updateStep\") {\n      return {\n        count: state.count,\n        step: action.step,\n      };\n    } else {\n      throw new Error();\n    }\n  }\n  \n  \n  function Counter() {\n    const [count, dispatch] = React.useReducer(reducer, 0);\n  \n    return (\n        <React.Fragment>\n        <h1>{count}</h1>\n        <button onClick={() => dispatch(1)}>+</button>\n        <button onClick={() => dispatch(-1)}> - </button>\n      </React.Fragment>\n    );\n  }\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n\n"]},"metadata":{},"sourceType":"module"}